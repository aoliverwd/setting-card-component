export class SettingCard extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const e=this.getTemplate(),t=this.innerHTML;this.innerHTML="",this.shadowRoot.appendChild(e.content.cloneNode(!0)),this.shadowRoot.querySelector(".setting_card .content").innerHTML=t;try{this.shadowRoot.querySelector("button.update_settings").onclick=e=>{this.updateSettings(e.target)}}catch(e){console.error("Save settings button does not exist")}}getTemplate(){const e=this.getAttribute("card-title"),t=document.createElement("template");return t.innerHTML=`\n        <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/aoliverwd/setting-card-component@main/dist/card-styles.css">\n\n        <div class="setting_card">\n            <h1 class="card_title">${e}</h1>\n            <div class="content"></div>\n        </div>`,t}updateSettings(e){const t=e.textContent,n=e.closest(".content");e.textContent="Processing",e.classList.add("processing"),n.classList.add("processing");const s=btoa(JSON.stringify(this.getInputFields()));this.sendPostRequest(s).then((e=>{console.log(e)})).catch((e=>{console.error(e)})),setTimeout((()=>{n.classList.remove("processing"),e.classList.remove("processing"),e.textContent=t}),1e3)}getInputFields(){const e={};return this.shadowRoot.querySelectorAll("form-input").forEach((t=>{const n=t.shadowRoot.querySelector("input");try{switch(e[n.name]={value:n.value,name:n.name,type:n.type,required:n.required||!1},n.type){case"checkbox":case"radio":e[n.name].checked=!!n.checked}}catch(e){console.error("Input not found or is missing attributes")}})),e}async sendPostRequest(e){const t=this.getAttribute("post-to-endpoint")||!1;return(await fetch(t,{headers:{"Content-Type":"application/json"},redirect:"follow",cache:"no-cache",method:"POST",mode:"cors",body:JSON.stringify({base:e})})).json()}}window.customElements.define("setting-card",SettingCard);export class FormInput extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const e=this.getTemplate();this.innerHTML="",this.shadowRoot.appendChild(e.content.cloneNode(!0))}getTemplate(){const e=document.createElement("template"),t=this.getInput();return e.innerHTML=`\n        <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/aoliverwd/setting-card-component@main/dist/input-styles.css">\n        ${t}`,e}getInput(){const e=this.gerDefaults();return"toggle"===e.type?`\n            <p>\n                <label for="${e.name}">${e.title}:</label>\n                <label class="toggle">\n                    <input\n                        type="checkbox"\n                        `+(e.checked?'checked="checked"':"")+`\n                        name="${e.name}"\n                        value="${e.value}"\n                    >\n                    <span class="slider"></span>\n                </label>\n            </p>`:`\n            <p>\n                <label for="${e.name}">${e.title}:</label>\n                <input\n                    type="${e.type}"\n                    name="${e.name}"\n                    id="${e.name}"\n                    value="${e.value}"\n                    `+(e.required?'required="required"':"")+`\n                    placeholder="${e.placeholder}"\n                >\n                <small>${e.helper_text}</small>\n            </p>`}gerDefaults(){return{type:this.getAttribute("type")||"text",title:this.getAttribute("title")||"",name:this.getAttribute("name")||"",required:this.getAttribute("required")||!1,value:this.getAttribute("value")||"",placeholder:this.getAttribute("placeholder")||"",checked:this.getAttribute("checked")||!1,helper_text:this.textContent||""}}}window.customElements.define("form-input",FormInput);
