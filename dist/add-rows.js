import{getInputFields}from"./settings-card.js";export class AddRows extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const t=this.getTemplate();this.innerHTML="",this.shadowRoot.appendChild(t.content.cloneNode(!0)),this.loadData(),this.shadowRoot.addEventListener("click",(t=>{if("button"===t.target.nodeName.toLowerCase()){const e=t.target.getAttribute("data-action");e&&"function"==typeof this[e]&&this[e].call(this,t.target)}}))}getTemplate(){const t=document.createElement("template"),e=this.closest(".setting_card").getAttribute("data-style_path")||"./",o=this.querySelector("template"),a=o?o.innerHTML:"";return t.innerHTML=`\n        <link rel="stylesheet" href="${e}card-styles.css">\n        <link rel="stylesheet" href="${e}add-row.css">\n        <div class="content">\n            <div id="rows"></div>\n            <div id="buttons">\n                <button type="button" data-action="addRow">Add Row</button>\n                <button type="button" data-action="saveData">Save</button>\n            </div>\n        </div>\n        <textarea id="rows_data" disabled style="display: none;"></textarea>\n        <template id="row_template">${a}</template>`,t}getCurrentTemplate(){const t=this.shadowRoot.querySelector("#row_template");if(t){const e=document.createElement("div"),o=document.createElement("button");return o.setAttribute("data-action","removeRow"),o.classList.add("warning"),o.textContent="Remove row",e.innerHTML=t.innerHTML,e.appendChild(o),e.innerHTML}return""}addRow(t,e){const o=this.shadowRoot.querySelector("#rows"),a=document.createElement("div"),n=this.closest("[data-style_path]");a.setAttribute("class","row"),n&&a.setAttribute("data-style_path",n.getAttribute("data-style_path")),a.innerHTML=this.getCurrentTemplate(),"object"==typeof e&&Object.keys(e).forEach((t=>{if("object"==typeof e[t]){a.querySelector(`form-input[name="${t}"]`).shadowRoot.updateInput(e[t]&&e[t].value?e[t].value:"")}})),o.appendChild(a)}removeRow(t){t.parentNode.remove()}saveData(t){const e=this.shadowRoot.querySelector("textarea#rows_data"),o=this.getAttribute("save-action"),a=[];let n=!1;e&&(n=!0,this.shadowRoot.querySelectorAll("#rows > .row").forEach((t=>{const e=getInputFields(t);a.push(e),n=!(!e.valid||!n)&&n})),n&&o&&"function"==typeof window[o]&&window[o].call(this,a,t))}loadData(){const t=this.getAttribute("load-data");if(t&&t.length>0){const e=JSON.parse(atob(t));Array.isArray(e)&&e.forEach((t=>{this.addRow(null,t)}))}}}window.customElements.define("add-row",AddRows);
